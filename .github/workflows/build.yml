name: Build Wedding App
on:
  push:
    branches:
      - disabled
jobs:
  cd:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Deploy Using ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ${{ vars.USERNAME }}
          # host: ${{ vars.HOST }} TODO uncomment when done
          host: 34.171.190.139
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo chmod 666 /var/run/docker.sock
            mkdir -p ~/app
            cd ~/app
            echo yes | git clone https://github.com/Harits19/wedding-app.git .
            git remote add origin https://github.com/Harits19/wedding-app.git
            git pull origin main
            git status

            touch .env
            echo MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
            echo MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}" >> .env
            echo MYSQL_USER="${{ secrets.MYSQL_USER }}" >> .env
            echo MYSQL_HOST="${{ secrets.MYSQL_HOST }}" >> .env
            echo NEXT_PUBLIC_APP_PORT="${{ vars.NEXT_PUBLIC_APP_PORT }}" >> .env
            echo NEXT_PUBLIC_APP_HOST="${{ vars.NEXT_PUBLIC_APP_HOST }}" >> .env
            echo TOKEN="${{ secrets.TOKEN }}" >> .env
            echo NEXT_PUBLIC_DEVELOPE_MODE="${{ vars.NEXT_PUBLIC_DEVELOPE_MODE }}" >> .env
            echo NODE_ENV="${{ vars.NODE_ENV }}" >> .env

            touch ssl.key
            echo "${{ secrets.SSL_KEY }}" >> ssl.key

            touch ssl.crt
            echo "${{ secrets.SSL_CRT }}" >> ssl.crt

            docker compose stop
            docker compose build
            docker compose up -d
